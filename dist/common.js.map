{"version":3,"sources":["webpack:///./src/app/shared/services/demandantes.service.ts","webpack:///./src/app/shared/services/sancionados.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACoB;AACC;AAEhE,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,eAAe;QAChC,aAAa,EAAE,OAAO;QACtB,aAAa,EAAE,OAAO;KACvB,CAAC;CACH,CAAC;AAKF;IAIE,4BAAoB,MAAkB;QAAlB,WAAM,GAAN,MAAM,CAAY;QAFtC,QAAG,GAAG,qEAAW,CAAC,MAAM,GAAG,cAAc,CAAC,CAAC,0BAA0B;IAE3B,CAAC;IAE3C,sCAAsC;IACtC,2CAAc,GAAd;QACE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IAED,wBAAwB;IACxB,0CAAa,GAAb,UAAc,UAAe;QAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;IAC7D,CAAC;IAED,yBAAyB;IACzB,2CAAc,GAAd,UAAe,EAAU,EAAE,UAAe;QACxC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;IACvE,CAAC;IAED,uBAAuB;IACvB,6CAAgB,GAAhB,UAAiB,EAAU;QACzB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC;IAC9D,CAAC;IAxBU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK4B,+DAAU;OAJ3B,kBAAkB,CAyB9B;IAAD,yBAAC;CAAA;AAzB8B;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBY;AACoB;AACC;AAEhE,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,eAAe;QAChC,aAAa,EAAE,OAAO;QACtB,aAAa,EAAE,OAAO;KACvB,CAAC;CACH,CAAC;AAMF;IAIE,4BAAoB,MAAkB;QAAlB,WAAM,GAAN,MAAM,CAAY;QAFtC,QAAG,GAAG,qEAAW,CAAC,MAAM,GAAG,cAAc,CAAC,CAAC,0BAA0B;IAE3B,CAAC;IAE3C,sCAAsC;IACtC,2CAAc,GAAd;QACC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,wBAAwB;IACxB,0CAAa,GAAb,UAAc,UAAc;QAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;IAC7D,CAAC;IAED,yBAAyB;IACzB,2CAAc,GAAd,UAAe,EAAS,EAAC,UAAc;QACrC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;IACvE,CAAC;IAED,uBAAuB;IACvB,6CAAgB,GAAhB,UAAiB,EAAS;QAExB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,EAAE,EAAE,WAAW,CAAC,CAAC;IAC1D,CAAC;IAzBU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK4B,+DAAU;OAJ3B,kBAAkB,CA8B9B;IAAD,yBAAC;CAAA;AA9B8B","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Authorization': 'my-auth-token',\n    'contentType': 'false',\n    'processData': 'false',\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DemandantesService {\n\n  url = environment.apiUrl + '/demandantes'; //url del servicio del API\n\n  constructor(private myHttp: HttpClient) { }\n\n  //Devuelve la lista de los demandantes\n  getDemandantes() {\n    return this.myHttp.get(this.url);\n  }\n\n  //Aficiona un demandante\n  addDemandante(demandante: any) {\n    return this.myHttp.post(this.url, demandante, httpOptions);\n  }\n\n  //Actualiza un demandante\n  editDemandante(id: number, demandante: any) {\n    return this.myHttp.put(this.url + '/' + id, demandante, httpOptions);\n  }\n\n  //Elimina un demandante\n  deleteDemandante(id: number) {\n    return this.myHttp.delete(this.url + '/' + id, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Authorization': 'my-auth-token',\n    'contentType': 'false', \n    'processData': 'false',\n  })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SancionadosService {\n\n  url = environment.apiUrl + '/sancionados'; //url del servicio del API\n\n  constructor(private myHttp: HttpClient) { }\n  \n  //Devuelve la lista de los sancionados\n  getSancionados(){\n   return this.myHttp.get(this.url);    \n  }\n  \n  //Aficiona un sancionado\n  addSancionado(sancionado:any){    \n    return this.myHttp.post(this.url, sancionado, httpOptions);      \n  }\n\n  //Actualiza un sancionado\n  editSancionado(id:number,sancionado:any){    \n    return this.myHttp.put(this.url + '/' + id, sancionado, httpOptions);      \n  }\n\n  //Elimina un sancionado\n  deleteSancionado(id:number)\n  {\n    return this.myHttp.delete(this.url+'/'+id, httpOptions);\n  }\n\n  \n\n  \n}\n"],"sourceRoot":""}