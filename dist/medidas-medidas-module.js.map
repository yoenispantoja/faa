{"version":3,"sources":["webpack:///./src/app/layout/medidas/medidas-routing.module.ts","webpack:///./src/app/layout/medidas/medidas.component.html","webpack:///./src/app/layout/medidas/medidas.component.scss","webpack:///./src/app/layout/medidas/medidas.component.ts","webpack:///./src/app/layout/medidas/medidas.module.ts"],"names":[],"mappings":"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","file":"medidas-medidas-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MedidasComponent } from './medidas.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MedidasComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MedidasRoutingModule { }\n","module.exports = \"<div [@routerTransition]>\\n    <app-page-header [heading]=\\\"'Listado de medidas'\\\" [icon]=\\\"'fa-gavel'\\\"></app-page-header>\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" id=\\\"tbMedidas\\\" [ngClass]=\\\"'table table-bordered table-hover display nowrap'\\\" *ngIf=\\\"medidas\\\" style=\\\"width:100%\\\">\\n                    <thead>\\n                        <tr>\\n                            <th class=\\\"text-center\\\" width=\\\"50px\\\">Ref.Indisciplina</th>\\n                            <th class=\\\"text-center\\\" style=\\\"text-overflow: ellipsis; width: 200px; white-space: nowrap; overflow: hidden;\\\"> Medida aplicada\\n                            </th>\\n                            <th>Detalles de la indisciplina</th>\\n                            <th class=\\\"thOperations\\\" width=\\\"50px\\\"></th>\\n                        </tr>\\n                    </thead>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <swal #successSwal title=\\\"Información\\\" text=\\\"Registro eliminado\\\" type=\\\"success\\\" [showCancelButton]=\\\"false\\\" [focusCancel]=\\\"true\\\">\\n    </swal>\\n\\n    <swal #questionSwal title=\\\"Información\\\" text=\\\"¿Está seguro de eliminar este registro?\\\" type=\\\"question\\\" [showCancelButton]=\\\"true\\\" [focusCancel]=\\\"true\\\" (confirm)=\\\"eliminarRegistro()\\\">\\n    </swal>\\n\\n    <!-- Ventana modal-->\\n    <ng-template #modalMedida let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"modal-header bg-info text-white\\\">\\n                <h5 class=\\\"modal-title\\\"><i class=\\\"fa fa-gavel\\\"></i> Editar medida</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"c('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Medida</label>\\n                    <input type=\\\"hidden\\\" formControlName=\\\"id\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"medida\\\" class=\\\"form-control\\\" placeholder=\\\"Medida\\\" aria-describedby=\\\"helpId\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"c('Close click')\\\"><i class=\\\"fa fa-remove\\\" aria-hidden=\\\"true\\\"></i>\\n        Cancelar</button>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fa fa-save\\\"></i> Guardar</button>\\n            </div>\\n        </form>\\n    </ng-template>\\n\\n    <swal #confirmSwal title=\\\"Información\\\" text=\\\"Medida actualizada\\\" type=\\\"success\\\" [showCancelButton]=\\\"false\\\" [focusCancel]=\\\"true\\\" (confirm)=\\\"cerrarVentana()\\\">\\n    </swal>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tZWRpZGFzL21lZGlkYXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { routerTransition } from '../../router.animations';\nimport { Component, OnInit, Renderer, ViewChild, OnDestroy, AfterViewInit } from '@angular/core';\n      \nimport { IndisciplinasService } from '../../shared/services/indisciplinas.service';\nimport { TableFactoryService } from '../../shared/services/table-factory.service';\nimport { DataTableDirective } from 'angular-datatables';\nimport { SweetAlert2Module, SwalComponent } from '@toverux/ngx-sweetalert2'; //para los sweetAlerts\nimport { Subject } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-medidas',\n  templateUrl: './medidas.component.html',\n  styleUrls: ['./medidas.component.scss'],\n  animations: [routerTransition()]\n})\nexport class MedidasComponent implements AfterViewInit, OnDestroy, OnInit {\n  //atributos\n  @ViewChild('questionSwal') private questionSwal: SwalComponent;\n  @ViewChild('successSwal') private successSwal: SwalComponent;\n  @ViewChild('confirmSwal') private confirmSwal: SwalComponent;\n\n  @ViewChild('modalMedida') private modalMedida: NgbModal;\n\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n\n  medidas: {};\n\n  dtOptions: {}; //opciones para el dataTable\n  dtTrigger: any = new Subject();\n\n  row: any; //para la fila seleccionada\n\n  //**** Parámetros del dataTable */\n  columnas = [\n    {\n      //columnas del dataTable\n      data: 'referencia',\n      className: 'text-center'\n    },\n    {\n      data: function(row, type, set) {\n        return '<span style=\"white-space:normal\">' + row.medida + '</span>';\n      }\n      //className:'text-center'\n    },\n    {\n      data: function(row, type, set) {\n        return (\n          '<strong class=\"text-primary\">Categoría: </strong>' +\n          row.categoria.nombre +\n          '.<strong class=\"text-danger\"> Total de implicados: </strong>' +\n          row.sancionados.length +\n          '. <hr><strong class=\"text-success\">Descripción: </strong>' +\n          row.descripcion\n        );\n      }\n    },\n    {\n      defaultContent:\n        \"<button type='button' id='btnVerIndisciplina' class='btn btn-sm btn-info btn-detail' title='Ver indisciplina'><i class='fa fa-search-plus vermas'></i></button> <button type='button' id='btnEditarMedida' class='btn btn-sm btn-warning btn-detail' title='Editar medida'><i class='fa fa-edit vermas'></i></button>\"\n    }\n  ];\n\n  url = environment.apiUrl + '/medidas'; //url del servicio del API\n  titulo = 'Listado de medidas aplicadas'; //titulo del documento que se exportará\n  orientacion = 'Portrait'; //orientación de la página del documento que se exportará\n  closeResult: string;\n\n  //Referente al formulario de edición\n  public form: FormGroup;\n\n  //métodos\n  constructor(\n    private myServicio: IndisciplinasService,\n    private myTabla: TableFactoryService,\n    private ruta: Router,\n    private modalServiceMedida: NgbModal,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.medidas = this.myServicio.getIndisciplinasConMedida().subscribe(data => {\n      this.medidas = data['data']; //lleno los demandantes desde el servicio      \n    });\n    this.dtOptions = this.myTabla.getDataTable(this.url, this.columnas, this.titulo, this.orientacion);\n\n    //Evento click del botón VerIndisciplina\n    $(document).on('click', '#btnVerIndisciplina', $event => {\n      let row = this.myTabla.getRowSelected();\n      this.ruta.navigate(['indisciplina-detalles', { id: row.id }]);\n    });\n\n    //Evento click del botón Editar\n    $(document).on('click', '#btnEditarMedida', $event => {\n      let row = this.myTabla.getRowSelected();\n      //Elementos del formulario\n      this.form = this.formBuilder.group({\n        id: [row.id],\n        medida: [row.medida, [Validators.required]]\n      });\n\n      this.modalServiceMedida.open(this.modalMedida).result.then(\n        result => {\n          this.closeResult = `Closed with: ${result}`;\n          this.modalServiceMedida.dismissAll();\n        },\n        reason => {\n          this.closeResult = `Dismissed `;\n        }\n      );\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n\n  onSubmit() {\n    const result: any = Object.assign({}, this.form.value);\n    let id = this.form.controls.id.value;\n    this.myServicio.actualizarMedida(id, result).subscribe(\n      data => {\n        //respuesta correcta\n        this.confirmSwal.show();\n      },\n      error => {\n        //respuesta de error\n      }\n    );\n    // alert(this.form.controls.nombre_completo.value);\n    //this.form.reset();\n  }\n\n  cerrarVentana() {\n    this.modalServiceMedida.dismissAll();\n    //Refrescar la vista\n    this.ruta.navigate(['medidas']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MedidasRoutingModule } from './medidas-routing.module';\nimport { MedidasComponent } from './medidas.component';\nimport { PageHeaderModule } from './../../shared';\nimport { DataTablesModule } from 'angular-datatables'; //para los datatables\nimport { ReactiveFormsModule } from '@angular/forms'; //para los formularios\nimport { SweetAlert2Module } from '@toverux/ngx-sweetalert2';\n\n\n@NgModule({\n  declarations: [MedidasComponent],\n  imports: [\n    CommonModule, \n    MedidasRoutingModule, \n    PageHeaderModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    SweetAlert2Module.forRoot({\n      buttonsStyling: false,\n      customClass: 'modal-content',\n      confirmButtonClass: 'btn btn-primary',\n      cancelButtonClass: 'btn'\n    })\n  ]\n})\nexport class MedidasModule {}\n"],"sourceRoot":""}