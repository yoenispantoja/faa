{"version":3,"sources":["webpack:///./src/app/layout/charts/charts-routing.module.ts","webpack:///./src/app/layout/charts/charts.component.html","webpack:///./src/app/layout/charts/charts.component.scss","webpack:///./src/app/layout/charts/charts.component.ts","webpack:///./src/app/layout/charts/charts.module.ts"],"names":[],"mappings":"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","file":"charts-charts-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChartsComponent } from './charts.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ChartsComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ChartsRoutingModule {}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <app-page-header [heading]=\\\"'Charts'\\\" [icon]=\\\"'fa-bar-chart-o'\\\"></app-page-header>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col col-sm-6\\\">\\r\\n            <div class=\\\"card mb-3\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Bar Chart\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <canvas baseChart [datasets]=\\\"barChartData\\\" [labels]=\\\"barChartLabels\\\" [options]=\\\"barChartOptions\\\" [legend]=\\\"barChartLegend\\\" [chartType]=\\\"barChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\r\\n                    </canvas>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"randomize()\\\">Update</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col col-sm-6\\\">\\r\\n            <div class=\\\"card mb-3\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Doughnut Chart\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <canvas baseChart height=\\\"180px\\\" [data]=\\\"doughnutChartData\\\" [labels]=\\\"doughnutChartLabels\\\" [chartType]=\\\"doughnutChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\r\\n                    </canvas>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col col-sm-6\\\">\\r\\n            <div class=\\\"card mb-3\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Radar Chart\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <canvas baseChart height=\\\"150px\\\" [datasets]=\\\"radarChartData\\\" [labels]=\\\"radarChartLabels\\\" [chartType]=\\\"radarChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\r\\n                    </canvas>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col col-sm-6\\\">\\r\\n            <div class=\\\"card mb-3\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Pie Chart\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <canvas baseChart height=\\\"150px\\\" [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\r\\n                    </canvas>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col col-sm-6\\\">\\r\\n            <div class=\\\"card mb-3\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Polar Area Chart\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <canvas baseChart height=\\\"130px\\\" [data]=\\\"polarAreaChartData\\\" [labels]=\\\"polarAreaChartLabels\\\" [legend]=\\\"polarAreaLegend\\\" [chartType]=\\\"polarAreaChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\r\\n                    </canvas>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col col-sm-6\\\">\\r\\n            <div class=\\\"card mb-3\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Line Chart\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <canvas baseChart height=\\\"130\\\" [datasets]=\\\"lineChartData\\\" [labels]=\\\"lineChartLabels\\\" [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\r\\n                    </canvas>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9jaGFydHMvY2hhcnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\n\r\n@Component({\r\n    selector: 'app-charts',\r\n    templateUrl: './charts.component.html',\r\n    styleUrls: ['./charts.component.scss'],\r\n    animations: [routerTransition()]\r\n})\r\nexport class ChartsComponent implements OnInit {\r\n    // bar chart\r\n    public barChartOptions: any = {\r\n        scaleShowVerticalLines: false,\r\n        responsive: true\r\n    };\r\n    public barChartLabels: string[] = [\r\n        '2006',\r\n        '2007',\r\n        '2008',\r\n        '2009',\r\n        '2010',\r\n        '2011',\r\n        '2012'\r\n    ];\r\n    public barChartType: string;\r\n    public barChartLegend: boolean;\r\n\r\n    public barChartData: any[] = [\r\n        { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\r\n        { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' }\r\n    ];\r\n\r\n    // Doughnut\r\n    public doughnutChartLabels: string[] = [\r\n        'Download Sales',\r\n        'In-Store Sales',\r\n        'Mail-Order Sales'\r\n    ];\r\n    public doughnutChartData: number[] = [350, 450, 100];\r\n    public doughnutChartType: string;\r\n\r\n    // Radar\r\n    public radarChartLabels: string[] = [\r\n        'Eating',\r\n        'Drinking',\r\n        'Sleeping',\r\n        'Designing',\r\n        'Coding',\r\n        'Cycling',\r\n        'Running'\r\n    ];\r\n    public radarChartData: any = [\r\n        { data: [65, 59, 90, 81, 56, 55, 40], label: 'Series A' },\r\n        { data: [28, 48, 40, 19, 96, 27, 100], label: 'Series B' }\r\n    ];\r\n    public radarChartType: string;\r\n\r\n    // Pie\r\n    public pieChartLabels: string[] = [\r\n        'Download Sales',\r\n        'In-Store Sales',\r\n        'Mail Sales'\r\n    ];\r\n    public pieChartData: number[] = [300, 500, 100];\r\n    public pieChartType: string;\r\n\r\n    // PolarArea\r\n    public polarAreaChartLabels: string[] = [\r\n        'Download Sales',\r\n        'In-Store Sales',\r\n        'Mail Sales',\r\n        'Telesales',\r\n        'Corporate Sales'\r\n    ];\r\n    public polarAreaChartData: number[] = [300, 500, 100, 40, 120];\r\n    public polarAreaLegend: boolean;\r\n\r\n    public polarAreaChartType: string;\r\n\r\n    // lineChart\r\n    public lineChartData: Array<any> = [\r\n        { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\r\n        { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' },\r\n        { data: [18, 48, 77, 9, 100, 27, 40], label: 'Series C' }\r\n    ];\r\n    public lineChartLabels: Array<any> = [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July'\r\n    ];\r\n    public lineChartOptions: any = {\r\n        responsive: true\r\n    };\r\n    public lineChartColors: Array<any> = [\r\n        {\r\n            // grey\r\n            backgroundColor: 'rgba(148,159,177,0.2)',\r\n            borderColor: 'rgba(148,159,177,1)',\r\n            pointBackgroundColor: 'rgba(148,159,177,1)',\r\n            pointBorderColor: '#fff',\r\n            pointHoverBackgroundColor: '#fff',\r\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n        },\r\n        {\r\n            // dark grey\r\n            backgroundColor: 'rgba(77,83,96,0.2)',\r\n            borderColor: 'rgba(77,83,96,1)',\r\n            pointBackgroundColor: 'rgba(77,83,96,1)',\r\n            pointBorderColor: '#fff',\r\n            pointHoverBackgroundColor: '#fff',\r\n            pointHoverBorderColor: 'rgba(77,83,96,1)'\r\n        },\r\n        {\r\n            // grey\r\n            backgroundColor: 'rgba(148,159,177,0.2)',\r\n            borderColor: 'rgba(148,159,177,1)',\r\n            pointBackgroundColor: 'rgba(148,159,177,1)',\r\n            pointBorderColor: '#fff',\r\n            pointHoverBackgroundColor: '#fff',\r\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n        }\r\n    ];\r\n    public lineChartLegend: boolean;\r\n    public lineChartType: string;\r\n\r\n    // events\r\n    public chartClicked(e: any): void {\r\n        // console.log(e);\r\n    }\r\n\r\n    public chartHovered(e: any): void {\r\n        // console.log(e);\r\n    }\r\n\r\n    public randomize(): void {\r\n        // Only Change 3 values\r\n        const data = [\r\n            Math.round(Math.random() * 100),\r\n            59,\r\n            80,\r\n            Math.random() * 100,\r\n            56,\r\n            Math.random() * 100,\r\n            40\r\n        ];\r\n        const clone = JSON.parse(JSON.stringify(this.barChartData));\r\n        clone[0].data = data;\r\n        this.barChartData = clone;\r\n        /**\r\n         * (My guess), for Angular to recognize the change in the dataset\r\n         * it has to change the dataset variable directly,\r\n         * so one way around it, is to clone the data, change it and then\r\n         * assign it;\r\n         */\r\n    }\r\n\r\n    constructor() {}\r\n\r\n    ngOnInit() {\r\n        this.barChartType = 'bar';\r\n        this.barChartLegend = true;\r\n        this.doughnutChartType = 'doughnut';\r\n        this.radarChartType = 'radar';\r\n        this.pieChartType = 'pie';\r\n        this.polarAreaLegend = true;\r\n        this.polarAreaChartType = 'polarArea';\r\n        this.lineChartLegend = true;\r\n        this.lineChartType = 'line';\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChartsModule as Ng2Charts } from 'ng2-charts';\r\n\r\nimport { ChartsRoutingModule } from './charts-routing.module';\r\nimport { ChartsComponent } from './charts.component';\r\nimport { PageHeaderModule } from '../../shared';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, Ng2Charts, ChartsRoutingModule, PageHeaderModule],\r\n    declarations: [ChartsComponent]\r\n})\r\nexport class ChartsModule {}\r\n"],"sourceRoot":""}