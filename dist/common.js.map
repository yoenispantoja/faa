{"version":3,"sources":["webpack:///./src/app/shared/services/categorias.service.ts","webpack:///./src/app/shared/services/demandantes.service.ts","webpack:///./src/app/shared/services/indisciplinas.service.ts","webpack:///./src/app/shared/services/sancionados.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    Authorization: 'my-auth-token',\n    contentType: 'false',\n    processData: 'false'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n  url = environment.apiUrl + '/categorias'; //url del servicio del API\n\n  constructor(private myHttp: HttpClient) {}\n\n  //Devuelve la lista de los categorias\n  getCategorias() {\n    return this.myHttp.get(this.url);\n  }\n\n  //Devuelve una categoria especifica\n  getCategoriaById(id: any) {\n    return this.myHttp.get(this.url + '/' + id);\n  }\n\n  //Aficiona un categoria\n  addCategoria(categoria: any) {\n    return this.myHttp.post(this.url, categoria, httpOptions);\n  }\n\n  //Actualiza un categoria\n  editCategoria(id: number, categoria: any) {\n    return this.myHttp.put(this.url + '/' + id, categoria, httpOptions);\n  }\n\n  //Elimina un categoria\n  deleteCategoria(id: number) {\n    return this.myHttp.delete(this.url + '/' + id, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Authorization': 'my-auth-token',\n    'contentType': 'false',\n    'processData': 'false',\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DemandantesService {\n\n  url = environment.apiUrl + '/demandantes'; //url del servicio del API\n\n  constructor(private myHttp: HttpClient) { }\n\n  //Devuelve la lista de los demandantes\n  getDemandantes() {\n    return this.myHttp.get(this.url);\n  }\n\n  //Aficiona un demandante\n  addDemandante(demandante: any) {\n    return this.myHttp.post(this.url, demandante, httpOptions);\n  }\n\n  //Actualiza un demandante\n  editDemandante(id: number, demandante: any) {\n    return this.myHttp.put(this.url + '/' + id, demandante, httpOptions);\n  }\n\n  //Elimina un demandante\n  deleteDemandante(id: number) {\n    return this.myHttp.delete(this.url + '/' + id, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Authorization': 'my-auth-token',\n    'contentType': 'false',\n    'processData': 'false',\n  })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndisciplinasService {\n  url = environment.apiUrl + '/indisciplinas'; //url del servicio del API\n  urlUltimasDiez = environment.apiUrl + '/ultimas_indisciplinas'; //url del servicio del API\n  urlConMedida = environment.apiUrl + '/medidas'; //url del servicio del API\n  urlEditMedida= environment.apiUrl+'/actualizar_medida' //url del servicio del API\n\n  constructor(private myHttp: HttpClient) {}\n\n  //Devuelve la lista de las indisciplinas\n  getIndisciplinas() {\n    return this.myHttp.get(this.url);\n  }\n\n  //Devuelve una indisciplina especifica\n  getIndisciplinaById(id: string) {\n    return this.myHttp.get(this.url + '/' + id);\n  }\n\n  //Devuelve la lista de las últimas 10 indisciplinas\n  getUltimasIndisciplinas() {\n    return this.myHttp.get(this.urlUltimasDiez);\n  }\n\n  //Devuelve la lista de las últimas 10 indisciplinas\n  getIndisciplinasConMedida() {\n    return this.myHttp.get(this.urlConMedida);\n  }\n\n  //Aficiona un indisciplina\n  addIndisciplina(indisciplina: any) {\n    return this.myHttp.post(this.url, indisciplina, httpOptions);\n  }\n\n  //Actualiza un indisciplina\n  editIndisciplina(id: number, indisciplina: any) {\n    return this.myHttp.put(this.url + '/' + id, indisciplina, httpOptions);\n  }\n\n  //Elimina un indisciplina\n  deleteIndisciplina(id: number) {\n    return this.myHttp.delete(this.url + '/' + id, httpOptions);\n  }\n\n  //actualiza medida\n  actualizarMedida(id: number, indisciplina: any) {\n    return this.myHttp.put(this.urlEditMedida, indisciplina, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Authorization': 'my-auth-token',\n    'contentType': 'false', \n    'processData': 'false',\n  })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SancionadosService {\n  url = environment.apiUrl + '/sancionados'; //url del servicio del API\n  urlUltimosDiez = environment.apiUrl + '/ultimos_sancionados'; //url del servicio del API\n\n  constructor(private myHttp: HttpClient) {}\n\n  //Devuelve la lista de los sancionados\n  getSancionados() {\n    return this.myHttp.get(this.url);\n  }\n\n  //Devuelve un sancionado especifico\n  getSancionadoById(id: string) {\n    return this.myHttp.get(this.url + '/' + id);\n  }\n\n  //Devuelve la lista de las últimas 10 indisciplinas\n  getUltimosSancionados() {\n    return this.myHttp.get(this.urlUltimosDiez);\n  }\n\n  //Aficiona un sancionado\n  addSancionado(sancionado: any) {\n    return this.myHttp.post(this.url, sancionado, httpOptions);\n  }\n\n  //Actualiza un sancionado\n  editSancionado(id: number, sancionado: any) {\n    return this.myHttp.put(this.url + '/' + id, sancionado, httpOptions);\n  }\n\n  //Elimina un sancionado\n  deleteSancionado(id: number) {\n    return this.myHttp.delete(this.url + '/' + id, httpOptions);\n  }\n}\n"],"sourceRoot":""}